from google.colab import files
files.upload()
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import classification_report
cell_df = pd.read_csv('cell_samples.csv')
cell_df.head()
cell_df.tail()
cell_df.shape
cell_df.size
cell_df.count()
cell_df['Class'].value_counts()
benign_df = cell_df[cell_df['Class']==2][0:200]
malignant_df = cell_df[cell_df['Class']==4][0:200]
#help(benign_df.plot)
axes= benign_df.plot(kind='scatter',x='Clump', y='UnifSize', color='blue', label='Benign')
malignant_df.plot(kind='scatter',x='Clump', y='UnifSize', color='red', label='Malignant', ax = axes)
cell_df.dtypes
cell_df=cell_df[pd.to_numeric(cell_df['BareNuc'], errors = 'coerce').notnull()]
cell_df['BareNuc'] =cell_df['BareNuc'].astype('int')
cell_df.dtypes
cell_df.columns
feature_df=cell_df[['Clump', 'UnifSize', 'UnifShape', 'MargAdh', 'SingEpiSize','BareNuc', 'BlandChrom', 'NormNucl', 'Mit']]
X= np.asarray(feature_df)
y=np.asarray(cell_df['Class'])
X[0:5]
y[0:5]
X_train, X_test, y_train, y_test =train_test_split(X, y, test_size= 0.2, random_state= 4)
X_train.shape
y_train.shape
X_test.shape
y_test.shape
classifier = svm.SVC(kernel = 'linear', gamma = 'auto', C = 2)
classifier.fit(X_train, y_train)
y_predict = classifier.predict(X_test)
print(classification_report(y_test, y_predict))
